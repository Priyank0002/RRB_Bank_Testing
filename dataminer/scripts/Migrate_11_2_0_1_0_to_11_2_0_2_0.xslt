<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2010

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:tbf="http://www.altova.com/MapForce/UDF/tbf"
                xmlns:xs="http://www.w3.org/2001/XMLSchema"
                xmlns:ns0="http://xmlns.oracle.com/odmr11"
                exclude-result-prefixes="tbf xs">
 <xsl:template name="tbf:tbf1_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Version">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Version">
    <xsl:value-of select="'11.2.0.2.0'"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Nodes">
   <ns0:Nodes>
    <xsl:call-template name="tbf:tbf2_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Nodes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Links">
   <ns0:Links>
    <xsl:call-template name="tbf:tbf226_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Links>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Comment">
   <xsl:variable name="var10_current" select="."/>
   <ns0:Comment>
    <xsl:value-of select="string($var10_current)"/>
   </ns0:Comment>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf2_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:DataSource">
   <ns0:DataSource>
    <xsl:call-template name="tbf:tbf3_DataSourceNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:DataSource>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:DataSink">
   <ns0:DataSink>
    <xsl:call-template name="tbf:tbf20_DataSinkNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:DataSink>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:DataProfile">
   <ns0:DataProfile>
    <xsl:call-template name="tbf:tbf21_DataProfileNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:DataProfile>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CreateTable">
   <ns0:CreateTable>
    <xsl:call-template name="tbf:tbf28_CreateTableNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CreateTable>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:UpdateTable">
   <ns0:UpdateTable>
    <xsl:call-template name="tbf:tbf31_UpdateTableNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:UpdateTable>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:DataRecord">
   <ns0:DataRecord>
    <xsl:call-template name="tbf:tbf35_DataRecordNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:DataRecord>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Transform">
   <ns0:Transform>
    <xsl:call-template name="tbf:tbf36_TransformNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Transform>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Aggregation">
   <ns0:Aggregation>
    <xsl:call-template name="tbf:tbf37_AggregationNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Aggregation>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Transformation">
   <ns0:Transformation>
    <xsl:call-template name="tbf:tbf41_TransformationNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Transformation>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Join">
   <ns0:Join>
    <xsl:call-template name="tbf:tbf75_JoinNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Join>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Text">
   <ns0:Text>
    <xsl:call-template name="tbf:tbf80_TextNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Text>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Split">
   <ns0:Split>
    <xsl:call-template name="tbf:tbf81_SplitNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Split>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Sample">
   <ns0:Sample>
    <xsl:call-template name="tbf:tbf82_SampleNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Sample>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ColumnFilter">
   <ns0:ColumnFilter>
    <xsl:call-template name="tbf:tbf90_ColumnFilterNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ColumnFilter>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:RowFilter">
   <ns0:RowFilter>
    <xsl:call-template name="tbf:tbf99_RowFilterNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:RowFilter>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Reference">
   <ns0:Reference>
    <xsl:call-template name="tbf:tbf101_ReferenceNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Reference>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ClassificationBuild">
   <ns0:ClassificationBuild>
    <xsl:call-template name="tbf:tbf102_ClassificationBuildNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ClassificationBuild>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:RegressionBuild">
   <ns0:RegressionBuild>
    <xsl:call-template name="tbf:tbf150_RegressionBuildNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:RegressionBuild>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ClusteringBuild">
   <ns0:ClusteringBuild>
    <xsl:call-template name="tbf:tbf158_ClusteringBuildNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ClusteringBuild>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:AssociationBuild">
   <ns0:AssociationBuild>
    <xsl:call-template name="tbf:tbf164_AssociationBuildNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:AssociationBuild>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:FeatureExtractionBuild">
   <ns0:FeatureExtractionBuild>
    <xsl:call-template name="tbf:tbf168_FeatureExtractionBuildNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:FeatureExtractionBuild>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:AnomalyDetectionBuild">
   <ns0:AnomalyDetectionBuild>
    <xsl:call-template name="tbf:tbf169_AnomalyDetectionBuildNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:AnomalyDetectionBuild>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Model">
   <ns0:Model>
    <xsl:call-template name="tbf:tbf173_ModelNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Model>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Apply">
   <ns0:Apply>
    <xsl:call-template name="tbf:tbf179_ApplyNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Apply>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Test">
   <ns0:Test>
    <xsl:call-template name="tbf:tbf214_TestNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Test>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Compare">
   <ns0:Compare>
    <xsl:call-template name="tbf:tbf218_CompareNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Compare>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Monitor">
   <ns0:Monitor>
    <xsl:call-template name="tbf:tbf219_MonitorNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Monitor>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ModelDetails">
   <ns0:ModelDetails>
    <xsl:call-template name="tbf:tbf220_ModelDetailsDataNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ModelDetails>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TestDetails">
   <ns0:TestDetails>
    <xsl:call-template name="tbf:tbf223_TestDetailsDataNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TestDetails>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:FilterDetails">
   <ns0:FilterDetails>
    <xsl:call-template name="tbf:tbf224_FilterDetailsDataNodeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:FilterDetails>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf3_DataSourceNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Attributes">
   <ns0:Attributes>
    <xsl:call-template name="tbf:tbf17_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Attributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SourceTable">
   <ns0:SourceTable>
    <xsl:call-template name="tbf:tbf19_TableType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:SourceTable>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf4_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@XCOORD">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="XCOORD">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@YCOORD">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="YCOORD">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@WIDTH">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="WIDTH">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@HEIGHT">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="HEIGHT">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@BorderColor">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="BorderColor">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@FillColor">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="FillColor">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@SHAPE">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="SHAPE">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:value-of select="string($input)"/>
 </xsl:template>
 <xsl:template name="tbf:tbf5_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Message">
   <ns0:Message>
    <xsl:call-template name="tbf:tbf6_MessageType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Message>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf6_MessageType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Type">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Type">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Resource">
   <ns0:Resource>
    <xsl:call-template name="tbf:tbf7_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Resource>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:DisplayValue">
   <xsl:variable name="var8_current" select="."/>
   <ns0:DisplayValue>
    <xsl:value-of select="string($var8_current)"/>
   </ns0:DisplayValue>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ActionKeys">
   <ns0:ActionKeys>
    <xsl:call-template name="tbf:tbf10_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ActionKeys>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ErrorDetail">
   <xsl:variable name="var12_current" select="."/>
   <ns0:ErrorDetail>
    <xsl:value-of select="string($var12_current)"/>
   </ns0:ErrorDetail>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf7_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Parameters">
   <ns0:Parameters>
    <xsl:call-template name="tbf:tbf8_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Parameters>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf8_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Value">
   <ns0:Value>
    <xsl:call-template name="tbf:tbf9_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Value>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf9_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Type">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Type">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Pos">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Pos">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:value-of select="string($input)"/>
 </xsl:template>
 <xsl:template name="tbf:tbf10_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Action">
   <ns0:Action>
    <xsl:call-template name="tbf:tbf11_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Action>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf11_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Order">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Order">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:value-of select="string($input)"/>
 </xsl:template>
 <xsl:template name="tbf:tbf12_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@UseFullData">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="UseFullData">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@GenerateCache">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="GenerateCache">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:NumberOfRows">
   <xsl:variable name="var6_current" select="."/>
   <ns0:NumberOfRows>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:NumberOfRows>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:PercentOfTotal">
   <xsl:variable name="var8_current" select="."/>
   <ns0:PercentOfTotal>
    <xsl:value-of select="string($var8_current)"/>
   </ns0:PercentOfTotal>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Method">
   <ns0:Method>
    <xsl:call-template name="tbf:tbf13_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Method>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:OutputTable">
   <ns0:OutputTable>
    <xsl:call-template name="tbf:tbf16_ResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:OutputTable>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf13_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Random">
   <ns0:Random>
    <xsl:call-template name="tbf:tbf14_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Random>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Stratified">
   <ns0:Stratified>
    <xsl:call-template name="tbf:tbf15_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Stratified>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TopN">
   <xsl:variable name="var6_current" select="."/>
   <ns0:TopN>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:TopN>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf14_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Seed">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Seed">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf15_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@TargetAttr">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="TargetAttr">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf16_ResultType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CreationDate">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="CreationDate">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf17_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Attribute">
   <ns0:Attribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf18_AttributeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@DataType">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="DataType">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Alias">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Alias">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf19_TableType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Schema">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Schema">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf20_DataSinkNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf21_DataProfileNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:DataProfileInput">
   <ns0:DataProfileInput>
    <xsl:call-template name="tbf:tbf22_DataProfileInputType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:DataProfileInput>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:DataProfileSettings">
   <ns0:DataProfileSettings>
    <xsl:call-template name="tbf:tbf23_DataProfileSettingsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:DataProfileSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:StatisticTable">
   <ns0:StatisticTable>
    <xsl:call-template name="tbf:tbf16_ResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:StatisticTable>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SampleSettings">
   <ns0:SampleSettings>
    <xsl:call-template name="tbf:tbf24_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:SampleSettings>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf22_DataProfileInputType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Attributes">
   <ns0:Attributes>
    <xsl:call-template name="tbf:tbf17_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Attributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:GroupByAttribute">
   <ns0:GroupByAttribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:GroupByAttribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf23_DataProfileSettingsType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:NumericalBins">
   <xsl:variable name="var2_current" select="."/>
   <ns0:NumericalBins>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:NumericalBins>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CategoricalBins">
   <xsl:variable name="var4_current" select="."/>
   <ns0:CategoricalBins>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:CategoricalBins>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:DateBins">
   <xsl:variable name="var6_current" select="."/>
   <ns0:DateBins>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:DateBins>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf24_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@UseFullData">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="UseFullData">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@GenerateCache">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="GenerateCache">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:NumberOfRows">
   <xsl:variable name="var6_current" select="."/>
   <ns0:NumberOfRows>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:NumberOfRows>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:PercentOfTotal">
   <xsl:variable name="var8_current" select="."/>
   <ns0:PercentOfTotal>
    <xsl:value-of select="string($var8_current)"/>
   </ns0:PercentOfTotal>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Method">
   <ns0:Method>
    <xsl:call-template name="tbf:tbf25_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Method>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:OutputTable">
   <ns0:OutputTable>
    <xsl:call-template name="tbf:tbf16_ResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:OutputTable>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf25_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Random">
   <ns0:Random>
    <xsl:call-template name="tbf:tbf26_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Random>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Stratified">
   <ns0:Stratified>
    <xsl:call-template name="tbf:tbf27_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Stratified>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TopN">
   <xsl:variable name="var6_current" select="."/>
   <ns0:TopN>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:TopN>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf26_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Seed">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Seed">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf27_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@TargetAttr">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="TargetAttr">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf28_CreateTableNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@TableName">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="TableName">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Table">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="Table">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AutoSpec">
   <xsl:variable name="var16_current" select="."/>
   <xsl:attribute name="AutoSpec">
    <xsl:value-of select="string($var16_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var24_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var24_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:DBAttributes">
   <ns0:DBAttributes>
    <xsl:call-template name="tbf:tbf29_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:DBAttributes>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf29_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:DBAttribute">
   <ns0:DBAttribute>
    <xsl:call-template name="tbf:tbf30_DBColumnType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:DBAttribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf30_DBColumnType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@DataType">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="DataType">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Alias">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Alias">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Key">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="Key">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Index">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="Index">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf31_UpdateTableNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@DropExisting">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="DropExisting">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AutoSpec">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="AutoSpec">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var22_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var22_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:UpdateTargetTable">
   <ns0:UpdateTargetTable>
    <xsl:call-template name="tbf:tbf19_TableType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:UpdateTargetTable>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:UpdateTableAttributes">
   <ns0:UpdateTableAttributes>
    <xsl:call-template name="tbf:tbf32_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:UpdateTableAttributes>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf32_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:UpdateTableItemType">
   <ns0:UpdateTableItemType>
    <xsl:call-template name="tbf:tbf33_MapTargetSourceType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:UpdateTableItemType>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf33_MapTargetSourceType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:key">
   <ns0:key>
    <xsl:call-template name="tbf:tbf34_UpdateTableColumnType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:key>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:value">
   <ns0:value>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:value>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf34_UpdateTableColumnType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@DataType">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="DataType">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Alias">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Alias">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@RequiredColumn">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="RequiredColumn">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf35_DataRecordNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf36_TransformNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf37_AggregationNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:AggregationElements">
   <ns0:AggregationElements>
    <xsl:call-template name="tbf:tbf38_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:AggregationElements>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:GroupingElement">
   <ns0:GroupingElement>
    <xsl:call-template name="tbf:tbf40_GroupingElementType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:GroupingElement>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:AutoSpec">
   <xsl:variable name="var24_current" select="."/>
   <ns0:AutoSpec>
    <xsl:value-of select="string($var24_current)"/>
   </ns0:AutoSpec>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf38_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:AggregationElement">
   <ns0:AggregationElement>
    <xsl:call-template name="tbf:tbf39_AggregationElementType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:AggregationElement>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf39_AggregationElementType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Source">
   <ns0:Source>
    <xsl:call-template name="tbf:tbf40_GroupingElementType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Source>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Output">
   <ns0:Output>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Output>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:AggregationFunction">
   <xsl:variable name="var6_current" select="."/>
   <ns0:AggregationFunction>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:AggregationFunction>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SubGroupBy">
   <ns0:SubGroupBy>
    <xsl:call-template name="tbf:tbf40_GroupingElementType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:SubGroupBy>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf40_GroupingElementType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Attributes">
   <ns0:Attributes>
    <xsl:call-template name="tbf:tbf17_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Attributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Expression">
   <xsl:variable name="var4_current" select="."/>
   <ns0:Expression>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:Expression>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf41_TransformationNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TransformationSourceAttributes">
   <ns0:TransformationSourceAttributes>
    <xsl:call-template name="tbf:tbf42_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TransformationSourceAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TransformedAttributes">
   <ns0:TransformedAttributes>
    <xsl:call-template name="tbf:tbf44_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TransformedAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SampleSettings">
   <ns0:SampleSettings>
    <xsl:call-template name="tbf:tbf24_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:SampleSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:InputStatisticTable">
   <ns0:InputStatisticTable>
    <xsl:call-template name="tbf:tbf16_ResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:InputStatisticTable>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TransformedStatisticTable">
   <ns0:TransformedStatisticTable>
    <xsl:call-template name="tbf:tbf16_ResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TransformedStatisticTable>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf42_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:TransformationSourceAttributeType">
   <ns0:TransformationSourceAttributeType>
    <xsl:call-template name="tbf:tbf43_TransformationSourceAttribute">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TransformationSourceAttributeType>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf43_TransformationSourceAttribute">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@DataType">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="DataType">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Alias">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Alias">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:IsOutput">
   <xsl:variable name="var12_current" select="."/>
   <ns0:IsOutput>
    <xsl:value-of select="string($var12_current)"/>
   </ns0:IsOutput>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf44_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:MapTransformedSourceType">
   <ns0:MapTransformedSourceType>
    <xsl:call-template name="tbf:tbf45_MapTransformedSource">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:MapTransformedSourceType>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf45_MapTransformedSource">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:key">
   <ns0:key>
    <xsl:call-template name="tbf:tbf46_TransformationOutputAttribute">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:key>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:StringCollectionNames">
   <ns0:StringCollectionNames>
    <xsl:call-template name="tbf:tbf72_StringCollection">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:StringCollectionNames>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf46_TransformationOutputAttribute">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@DataType">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="DataType">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Alias">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Alias">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:IsOutput">
   <xsl:variable name="var12_current" select="."/>
   <ns0:IsOutput>
    <xsl:value-of select="string($var12_current)"/>
   </ns0:IsOutput>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TransformationElementType">
   <ns0:TransformationElementType>
    <xsl:call-template name="tbf:tbf47_TransformationType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TransformationElementType>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Modified">
   <xsl:variable name="var16_current" select="."/>
   <ns0:Modified>
    <xsl:value-of select="string($var16_current)"/>
   </ns0:Modified>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf47_TransformationType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Normalization">
   <ns0:Normalization>
    <xsl:call-template name="tbf:tbf48_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Normalization>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Outlier">
   <ns0:Outlier>
    <xsl:call-template name="tbf:tbf50_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Outlier>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:MissingValuesNumeric">
   <ns0:MissingValuesNumeric>
    <xsl:call-template name="tbf:tbf54_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:MissingValuesNumeric>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:MissingValuesCategorical">
   <ns0:MissingValuesCategorical>
    <xsl:call-template name="tbf:tbf57_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:MissingValuesCategorical>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:MissingValuesDate">
   <ns0:MissingValuesDate>
    <xsl:call-template name="tbf:tbf60_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:MissingValuesDate>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CustomTransformation">
   <ns0:CustomTransformation>
    <xsl:call-template name="tbf:tbf63_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CustomTransformation>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Binning">
   <ns0:Binning>
    <xsl:call-template name="tbf:tbf64_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Binning>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf48_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:MinMax">
   <ns0:MinMax>
    <xsl:call-template name="tbf:tbf49_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:MinMax>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ZScore">
   <xsl:variable name="var4_current" select="."/>
   <xsl:copy-of select="$var4_current/@*"/>
   <xsl:copy-of select="$var4_current/node()"/>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:LinearScale">
   <xsl:variable name="var6_current" select="."/>
   <xsl:copy-of select="$var6_current/@*"/>
   <xsl:copy-of select="$var6_current/node()"/>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf49_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Minimum">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Minimum">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Maximum">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Maximum">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf50_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@ReplaceWith">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="ReplaceWith">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:StandardDeviation">
   <ns0:StandardDeviation>
    <xsl:call-template name="tbf:tbf51_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:StandardDeviation>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Percent">
   <ns0:Percent>
    <xsl:call-template name="tbf:tbf52_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Percent>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Value">
   <ns0:Value>
    <xsl:call-template name="tbf:tbf53_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Value>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf51_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@MultiplesSigma">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="MultiplesSigma">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf52_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@LowerPercent">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="LowerPercent">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UpperPercent">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="UpperPercent">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf53_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@LowerValue">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="LowerValue">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UpperValue">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="UpperValue">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf54_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:NumericStatistic">
   <ns0:NumericStatistic>
    <xsl:call-template name="tbf:tbf55_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:NumericStatistic>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Value">
   <ns0:Value>
    <xsl:call-template name="tbf:tbf56_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Value>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf55_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@ReplaceNullsWith">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="ReplaceNullsWith">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf56_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@ReplaceNullsWith">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="ReplaceNullsWith">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf57_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:CategoricalStatistic">
   <ns0:CategoricalStatistic>
    <xsl:call-template name="tbf:tbf58_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CategoricalStatistic>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Value">
   <ns0:Value>
    <xsl:call-template name="tbf:tbf59_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Value>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf58_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@ReplaceNullsWith">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="ReplaceNullsWith">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf59_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@ReplaceNullsWith">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="ReplaceNullsWith">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf60_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:DateStatistic">
   <ns0:DateStatistic>
    <xsl:call-template name="tbf:tbf61_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:DateStatistic>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Value">
   <ns0:Value>
    <xsl:call-template name="tbf:tbf62_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Value>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf61_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@ReplaceNullsWith">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="ReplaceNullsWith">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf62_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@ReplaceNullsWith">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="ReplaceNullsWith">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf63_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Value">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Value">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf64_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Quantile">
   <ns0:Quantile>
    <xsl:call-template name="tbf:tbf65_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Quantile>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CustomNumeric">
   <ns0:CustomNumeric>
    <xsl:call-template name="tbf:tbf68_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CustomNumeric>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CustomCategorical">
   <ns0:CustomCategorical>
    <xsl:call-template name="tbf:tbf70_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CustomCategorical>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:EqualWidth">
   <ns0:EqualWidth>
    <xsl:call-template name="tbf:tbf73_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:EqualWidth>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TopN">
   <ns0:TopN>
    <xsl:call-template name="tbf:tbf74_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TopN>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf65_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:BinCount">
   <xsl:variable name="var2_current" select="."/>
   <ns0:BinCount>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:BinCount>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:BinGeneration">
   <ns0:BinGeneration>
    <xsl:call-template name="tbf:tbf66_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:BinGeneration>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:BinLabels">
   <ns0:BinLabels>
    <xsl:call-template name="tbf:tbf67_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:BinLabels>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf66_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Auto">
   <xsl:variable name="var2_current" select="."/>
   <xsl:copy-of select="$var2_current/@*"/>
   <xsl:copy-of select="$var2_current/node()"/>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Manual">
   <xsl:variable name="var4_current" select="."/>
   <xsl:copy-of select="$var4_current/@*"/>
   <xsl:copy-of select="$var4_current/node()"/>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf67_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Range">
   <xsl:variable name="var2_current" select="."/>
   <xsl:copy-of select="$var2_current/@*"/>
   <xsl:copy-of select="$var2_current/node()"/>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:NumberSequence">
   <xsl:variable name="var4_current" select="."/>
   <xsl:copy-of select="$var4_current/@*"/>
   <xsl:copy-of select="$var4_current/node()"/>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf68_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:NumericBin">
   <ns0:NumericBin>
    <xsl:call-template name="tbf:tbf69_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:NumericBin>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf69_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:BinName">
   <xsl:variable name="var2_current" select="."/>
   <ns0:BinName>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:BinName>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:LowerBound">
   <xsl:variable name="var4_current" select="."/>
   <ns0:LowerBound>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:LowerBound>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf70_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:CategoricalBin">
   <ns0:CategoricalBin>
    <xsl:call-template name="tbf:tbf71_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CategoricalBin>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf71_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Name">
   <xsl:variable name="var2_current" select="."/>
   <ns0:Name>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:Name>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:IsOther">
   <xsl:variable name="var4_current" select="."/>
   <ns0:IsOther>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:IsOther>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:StringCollectionValues">
   <ns0:StringCollectionValues>
    <xsl:call-template name="tbf:tbf72_StringCollection">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:StringCollectionValues>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf72_StringCollection">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Value">
   <xsl:variable name="var2_current" select="."/>
   <ns0:Value>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:Value>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf73_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:BinCount">
   <xsl:variable name="var2_current" select="."/>
   <ns0:BinCount>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:BinCount>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:BinGeneration">
   <ns0:BinGeneration>
    <xsl:call-template name="tbf:tbf66_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:BinGeneration>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:BinLabels">
   <ns0:BinLabels>
    <xsl:call-template name="tbf:tbf67_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:BinLabels>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf74_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:BinCount">
   <xsl:variable name="var2_current" select="."/>
   <ns0:BinCount>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:BinCount>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Other">
   <xsl:variable name="var4_current" select="."/>
   <ns0:Other>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:Other>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf75_JoinNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:KeyColumns">
   <ns0:KeyColumns>
    <xsl:call-template name="tbf:tbf76_JoinKeyColumnsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:KeyColumns>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:OutputColumns">
   <ns0:OutputColumns>
    <xsl:call-template name="tbf:tbf79_JoinOutputColumnsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:OutputColumns>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Filter">
   <xsl:variable name="var24_current" select="."/>
   <ns0:Filter>
    <xsl:value-of select="string($var24_current)"/>
   </ns0:Filter>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf76_JoinKeyColumnsType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@AutoSpec">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="AutoSpec">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:JoinColumn">
   <ns0:JoinColumn>
    <xsl:call-template name="tbf:tbf77_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:JoinColumn>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf77_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Type">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Type">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:LeftColumn">
   <ns0:LeftColumn>
    <xsl:call-template name="tbf:tbf78_RefDBColumnType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:LeftColumn>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:RightColumn">
   <ns0:RightColumn>
    <xsl:call-template name="tbf:tbf78_RefDBColumnType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:RightColumn>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf78_RefDBColumnType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@DataType">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="DataType">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Alias">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Alias">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Key">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="Key">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Index">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="Index">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@NodeId">
   <xsl:variable name="var16_current" select="."/>
   <xsl:attribute name="NodeId">
    <xsl:value-of select="string($var16_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf79_JoinOutputColumnsType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@AutoSpec">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="AutoSpec">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:RefDBColumn">
   <ns0:RefDBColumn>
    <xsl:call-template name="tbf:tbf78_RefDBColumnType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:RefDBColumn>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf80_TextNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf81_SplitNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf82_SampleNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SamplingSettings">
   <ns0:SamplingSettings>
    <xsl:call-template name="tbf:tbf83_SamplingSettingsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:SamplingSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:StatisticTable">
   <ns0:StatisticTable>
    <xsl:call-template name="tbf:tbf89_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:StatisticTable>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf83_SamplingSettingsType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:NumberOfRows">
   <xsl:variable name="var2_current" select="."/>
   <ns0:NumberOfRows>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:NumberOfRows>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:PercentOfTotal">
   <xsl:variable name="var4_current" select="."/>
   <ns0:PercentOfTotal>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:PercentOfTotal>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Method">
   <ns0:Method>
    <xsl:call-template name="tbf:tbf84_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Method>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CaseAttribute">
   <ns0:CaseAttribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CaseAttribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf84_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Random">
   <ns0:Random>
    <xsl:call-template name="tbf:tbf85_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Random>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Stratified">
   <ns0:Stratified>
    <xsl:call-template name="tbf:tbf86_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Stratified>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TopN">
   <xsl:variable name="var6_current" select="."/>
   <ns0:TopN>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:TopN>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf85_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Seed">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Seed">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf86_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@TargetAttr">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="TargetAttr">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@DataType">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="DataType">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Type">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Type">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Seed">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Seed">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Distributions">
   <ns0:Distributions>
    <xsl:call-template name="tbf:tbf87_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Distributions>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf87_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Distribution">
   <ns0:Distribution>
    <xsl:call-template name="tbf:tbf88_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Distribution>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf88_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@TargetValue">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="TargetValue">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Count">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Count">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf89_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CreationDate">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="CreationDate">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Column">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Column">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf90_ColumnFilterNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ColumnFilterSettings">
   <ns0:ColumnFilterSettings>
    <xsl:call-template name="tbf:tbf91_ColumnFilterSettingsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ColumnFilterSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ColumnFilterAttributes">
   <ns0:ColumnFilterAttributes>
    <xsl:call-template name="tbf:tbf94_ColumnFilterAttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ColumnFilterAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ColumnFilterResults">
   <ns0:ColumnFilterResults>
    <xsl:call-template name="tbf:tbf96_ColumnFilterResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ColumnFilterResults>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf91_ColumnFilterSettingsType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@NumberOfRows">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="NumberOfRows">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:DataQualitySettings">
   <ns0:DataQualitySettings>
    <xsl:call-template name="tbf:tbf92_DataQualitySettingsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:DataQualitySettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:AttrImportantSettings">
   <ns0:AttrImportantSettings>
    <xsl:call-template name="tbf:tbf93_AttrImportantSettingsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:AttrImportantSettings>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf92_DataQualitySettingsType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@NullsPercent">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="NullsPercent">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UniquePercent">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="UniquePercent">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@ConstantPercent">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="ConstantPercent">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf93_AttrImportantSettingsType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@CutOff">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="CutOff">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@TopN">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="TopN">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TargetAttribute">
   <ns0:TargetAttribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TargetAttribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf94_ColumnFilterAttributeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@AutoSpec">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="AutoSpec">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AutomaticFilterEnable">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="AutomaticFilterEnable">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Attribute">
   <ns0:Attribute>
    <xsl:call-template name="tbf:tbf95_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf95_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@DataType">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="DataType">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Alias">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Alias">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AutomaticFiltering">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="AutomaticFiltering">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Output">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="Output">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf96_ColumnFilterResultType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@DataQualityOutput">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="DataQualityOutput">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttrImportanceOutput">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="AttrImportanceOutput">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Attribute">
   <ns0:Attribute>
    <xsl:call-template name="tbf:tbf97_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf97_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Reason">
   <ns0:Reason>
    <xsl:call-template name="tbf:tbf98_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Reason>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf98_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Type">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Type">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf99_RowFilterNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:OutputColumns">
   <ns0:OutputColumns>
    <xsl:call-template name="tbf:tbf100_RowFilterOutputColumnsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:OutputColumns>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Filter">
   <xsl:variable name="var22_current" select="."/>
   <ns0:Filter>
    <xsl:value-of select="string($var22_current)"/>
   </ns0:Filter>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf100_RowFilterOutputColumnsType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Attribute">
   <ns0:Attribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf101_ReferenceNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf102_ClassificationBuildNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:BuildDataSource">
   <ns0:BuildDataSource>
    <xsl:call-template name="tbf:tbf103_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:BuildDataSource>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CaseAttributes">
   <ns0:CaseAttributes>
    <xsl:call-template name="tbf:tbf104_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CaseAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:MiningAttributes">
   <ns0:MiningAttributes>
    <xsl:call-template name="tbf:tbf105_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:MiningAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TestDataSource">
   <ns0:TestDataSource>
    <xsl:call-template name="tbf:tbf107_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TestDataSource>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TargetAttribute">
   <ns0:TargetAttribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TargetAttribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Models">
   <ns0:Models>
    <xsl:call-template name="tbf:tbf110_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Models>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CostSettings">
   <ns0:CostSettings>
    <xsl:call-template name="tbf:tbf120_CostMatrixType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CostSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:BenefitSettings">
   <ns0:BenefitSettings>
    <xsl:call-template name="tbf:tbf116_WeightsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:BenefitSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TestSettings">
   <ns0:TestSettings>
    <xsl:call-template name="tbf:tbf138_ClassificationTestSettingsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TestSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ProfitSettings">
   <ns0:ProfitSettings>
    <xsl:call-template name="tbf:tbf143_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ProfitSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Results">
   <ns0:Results>
    <xsl:call-template name="tbf:tbf144_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Results>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf103_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@SourceId">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="SourceId">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf104_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Attribute">
   <ns0:Attribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf105_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:MiningAttribute">
   <ns0:MiningAttribute>
    <xsl:call-template name="tbf:tbf106_MiningAttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:MiningAttribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf106_MiningAttributeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@DataType">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="DataType">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Alias">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Alias">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AutoPrep">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="AutoPrep">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@MiningType">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="MiningType">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Input">
   <xsl:variable name="var16_current" select="."/>
   <xsl:attribute name="Input">
    <xsl:value-of select="string($var16_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf107_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:SplitData">
   <ns0:SplitData>
    <xsl:call-template name="tbf:tbf108_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:SplitData>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:BuildData">
   <xsl:variable name="var4_current" select="."/>
   <xsl:copy-of select="$var4_current/@*"/>
   <xsl:copy-of select="$var4_current/node()"/>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TestData">
   <ns0:TestData>
    <xsl:call-template name="tbf:tbf109_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TestData>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:None">
    <ns0:None/>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf108_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@TestPercent">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="TestPercent">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf109_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@SourceId">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="SourceId">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf110_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:NaiveBayesModel">
   <ns0:NaiveBayesModel>
    <xsl:call-template name="tbf:tbf111_NaiveBayesModelType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:NaiveBayesModel>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:DecisionTreeModel">
   <ns0:DecisionTreeModel>
    <xsl:call-template name="tbf:tbf132_DecisionTreeModelType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:DecisionTreeModel>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CSupportVectorMachineModel">
   <ns0:CSupportVectorMachineModel>
    <xsl:call-template name="tbf:tbf134_CSupportVectorMachineModelType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CSupportVectorMachineModel>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CGeneralizedLinearModel">
   <ns0:CGeneralizedLinearModel>
    <xsl:call-template name="tbf:tbf136_CGeneralizedLinearModelType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CGeneralizedLinearModel>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf111_NaiveBayesModelType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Valid">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Valid">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CreationDate">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="CreationDate">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UseForOutput">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="UseForOutput">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:InputMiningData">
   <ns0:InputMiningData>
    <xsl:call-template name="tbf:tbf112_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:InputMiningData>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf113_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TargetAttribute">
   <ns0:TargetAttribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TargetAttribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Performance">
   <ns0:Performance>
    <xsl:call-template name="tbf:tbf114_PerformanceType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Performance>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Tuning">
   <ns0:Tuning>
    <xsl:call-template name="tbf:tbf118_TuningType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Tuning>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:NaiveBayesAlgo">
   <ns0:NaiveBayesAlgo>
    <xsl:call-template name="tbf:tbf129_NaiveBayesAlgoType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:NaiveBayesAlgo>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Prior">
   <ns0:Prior>
    <xsl:call-template name="tbf:tbf130_PriorType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Prior>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf112_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@DataUsage">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="DataUsage">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@MiningUsage">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="MiningUsage">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:MiningAttributes">
   <ns0:MiningAttributes>
    <xsl:call-template name="tbf:tbf105_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:MiningAttributes>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf113_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Message">
   <ns0:Message>
    <xsl:call-template name="tbf:tbf6_MessageType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Message>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf114_PerformanceType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Balanced">
    <ns0:Balanced/>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Natural">
    <ns0:Natural/>  
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Custom">
   <ns0:Custom>
    <xsl:call-template name="tbf:tbf115_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Custom>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf115_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Weights">
   <ns0:Weights>
    <xsl:call-template name="tbf:tbf116_WeightsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Weights>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf116_WeightsType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Item">
   <ns0:Item>
    <xsl:call-template name="tbf:tbf117_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Item>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf117_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@TargetValue">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="TargetValue">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Weight">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Weight">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf118_TuningType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:None">
    <ns0:None/>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Cost">
   <ns0:Cost>
    <xsl:call-template name="tbf:tbf119_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Cost>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Benefit">
   <ns0:Benefit>
    <xsl:call-template name="tbf:tbf122_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Benefit>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Custom">
   <ns0:Custom>
    <xsl:call-template name="tbf:tbf123_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Custom>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf119_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:CostMatrix">
   <ns0:CostMatrix>
    <xsl:call-template name="tbf:tbf120_CostMatrixType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CostMatrix>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf120_CostMatrixType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Item">
   <ns0:Item>
    <xsl:call-template name="tbf:tbf121_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Item>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf121_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Actual">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Actual">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Predict">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Predict">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Cost">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Cost">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf122_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:BenefitWeights">
   <ns0:BenefitWeights>
    <xsl:call-template name="tbf:tbf116_WeightsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:BenefitWeights>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf123_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Settings">
   <ns0:Settings>
    <xsl:call-template name="tbf:tbf124_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Settings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CostMatrix">
   <ns0:CostMatrix>
    <xsl:call-template name="tbf:tbf120_CostMatrixType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CostMatrix>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf124_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@TargetValue">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="TargetValue">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ROC">
   <ns0:ROC>
    <xsl:call-template name="tbf:tbf125_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ROC>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Lift">
   <ns0:Lift>
    <xsl:call-template name="tbf:tbf127_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Lift>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Profit">
   <ns0:Profit>
    <xsl:call-template name="tbf:tbf128_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Profit>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf125_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Accuracy">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Accuracy">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Threshold">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Threshold">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CustomThreshold">
   <ns0:CustomThreshold>
    <xsl:call-template name="tbf:tbf126_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CustomThreshold>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf126_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Type">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Type">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Value">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Value">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf127_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Type">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Type">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Quantile">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Quantile">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Threshold">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Threshold">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf128_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Population">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Population">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Profit">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Profit">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@ROI">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="ROI">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf129_NaiveBayesAlgoType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:NABS_PAIRWISE_THRESHOLD">
   <xsl:variable name="var2_current" select="."/>
   <ns0:NABS_PAIRWISE_THRESHOLD>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:NABS_PAIRWISE_THRESHOLD>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:NABS_SINGLETON_THRESHOLD">
   <xsl:variable name="var4_current" select="."/>
   <ns0:NABS_SINGLETON_THRESHOLD>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:NABS_SINGLETON_THRESHOLD>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf130_PriorType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Item">
   <ns0:Item>
    <xsl:call-template name="tbf:tbf131_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Item>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf131_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@TargetValue">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="TargetValue">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Prob">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Prob">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf132_DecisionTreeModelType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Valid">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Valid">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CreationDate">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="CreationDate">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UseForOutput">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="UseForOutput">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:InputMiningData">
   <ns0:InputMiningData>
    <xsl:call-template name="tbf:tbf112_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:InputMiningData>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf113_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TargetAttribute">
   <ns0:TargetAttribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TargetAttribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Performance">
   <ns0:Performance>
    <xsl:call-template name="tbf:tbf114_PerformanceType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Performance>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Tuning">
   <ns0:Tuning>
    <xsl:call-template name="tbf:tbf118_TuningType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Tuning>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:DecisionTreeAlgo">
   <ns0:DecisionTreeAlgo>
    <xsl:call-template name="tbf:tbf133_DecisionTreeAlgoType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:DecisionTreeAlgo>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf133_DecisionTreeAlgoType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:TREE_IMPURITY_METRIC">
   <xsl:variable name="var2_current" select="."/>
   <ns0:TREE_IMPURITY_METRIC>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:TREE_IMPURITY_METRIC>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TREE_TERM_MAX_DEPTH">
   <xsl:variable name="var4_current" select="."/>
   <ns0:TREE_TERM_MAX_DEPTH>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:TREE_TERM_MAX_DEPTH>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TREE_TERM_MINPCT_NODE">
   <xsl:variable name="var6_current" select="."/>
   <ns0:TREE_TERM_MINPCT_NODE>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:TREE_TERM_MINPCT_NODE>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TREE_TERM_MINPCT_SPLIT">
   <xsl:variable name="var8_current" select="."/>
   <ns0:TREE_TERM_MINPCT_SPLIT>
    <xsl:value-of select="string($var8_current)"/>
   </ns0:TREE_TERM_MINPCT_SPLIT>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TREE_TERM_MINREC_NODE">
   <xsl:variable name="var10_current" select="."/>
   <ns0:TREE_TERM_MINREC_NODE>
    <xsl:value-of select="string($var10_current)"/>
   </ns0:TREE_TERM_MINREC_NODE>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TREE_TERM_MINREC_SPLIT">
   <xsl:variable name="var12_current" select="."/>
   <ns0:TREE_TERM_MINREC_SPLIT>
    <xsl:value-of select="string($var12_current)"/>
   </ns0:TREE_TERM_MINREC_SPLIT>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf134_CSupportVectorMachineModelType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Valid">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Valid">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CreationDate">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="CreationDate">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UseForOutput">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="UseForOutput">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:InputMiningData">
   <ns0:InputMiningData>
    <xsl:call-template name="tbf:tbf112_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:InputMiningData>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf113_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TargetAttribute">
   <ns0:TargetAttribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TargetAttribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Performance">
   <ns0:Performance>
    <xsl:call-template name="tbf:tbf114_PerformanceType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Performance>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Tuning">
   <ns0:Tuning>
    <xsl:call-template name="tbf:tbf118_TuningType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Tuning>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CSupportVectorMachineAlgo">
   <ns0:CSupportVectorMachineAlgo>
    <xsl:call-template name="tbf:tbf135_CSupportVectorMachineAlgoType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CSupportVectorMachineAlgo>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf135_CSupportVectorMachineAlgoType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:SVMS_ACTIVE_LEARNING">
   <xsl:variable name="var2_current" select="."/>
   <ns0:SVMS_ACTIVE_LEARNING>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:SVMS_ACTIVE_LEARNING>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_COMPLEXITY_FACTOR">
   <xsl:variable name="var4_current" select="."/>
   <ns0:SVMS_COMPLEXITY_FACTOR>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:SVMS_COMPLEXITY_FACTOR>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_CONV_TOLERANCE">
   <xsl:variable name="var6_current" select="."/>
   <ns0:SVMS_CONV_TOLERANCE>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:SVMS_CONV_TOLERANCE>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_KERNEL_CACHE_SIZE">
   <xsl:variable name="var8_current" select="."/>
   <ns0:SVMS_KERNEL_CACHE_SIZE>
    <xsl:value-of select="string($var8_current)"/>
   </ns0:SVMS_KERNEL_CACHE_SIZE>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_KERNEL_FUNCTION">
   <xsl:variable name="var10_current" select="."/>
   <ns0:SVMS_KERNEL_FUNCTION>
    <xsl:value-of select="string($var10_current)"/>
   </ns0:SVMS_KERNEL_FUNCTION>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_STD_DEV">
   <xsl:variable name="var12_current" select="."/>
   <ns0:SVMS_STD_DEV>
    <xsl:value-of select="string($var12_current)"/>
   </ns0:SVMS_STD_DEV>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf136_CGeneralizedLinearModelType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Valid">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Valid">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CreationDate">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="CreationDate">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UseForOutput">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="UseForOutput">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:InputMiningData">
   <ns0:InputMiningData>
    <xsl:call-template name="tbf:tbf112_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:InputMiningData>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf113_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TargetAttribute">
   <ns0:TargetAttribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TargetAttribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Performance">
   <ns0:Performance>
    <xsl:call-template name="tbf:tbf114_PerformanceType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Performance>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Tuning">
   <ns0:Tuning>
    <xsl:call-template name="tbf:tbf118_TuningType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Tuning>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CGeneralizedLinearAlgo">
   <ns0:CGeneralizedLinearAlgo>
    <xsl:call-template name="tbf:tbf137_CGeneralizedLinearAlgoType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CGeneralizedLinearAlgo>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf137_CGeneralizedLinearAlgoType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:GLMS_CONF_LEVEL">
   <xsl:variable name="var2_current" select="."/>
   <ns0:GLMS_CONF_LEVEL>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:GLMS_CONF_LEVEL>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:GLMS_DIAGNOSTICS_TABLE_NAME">
   <xsl:variable name="var4_current" select="."/>
   <ns0:GLMS_DIAGNOSTICS_TABLE_NAME>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:GLMS_DIAGNOSTICS_TABLE_NAME>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:GLMS_REFERENCE_CLASS_NAME">
   <xsl:variable name="var6_current" select="."/>
   <ns0:GLMS_REFERENCE_CLASS_NAME>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:GLMS_REFERENCE_CLASS_NAME>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:GLMS_RIDGE_REGRESSION">
   <xsl:variable name="var8_current" select="."/>
   <ns0:GLMS_RIDGE_REGRESSION>
    <xsl:value-of select="string($var8_current)"/>
   </ns0:GLMS_RIDGE_REGRESSION>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:GLMS_RIDGE_VALUE">
   <xsl:variable name="var10_current" select="."/>
   <ns0:GLMS_RIDGE_VALUE>
    <xsl:value-of select="string($var10_current)"/>
   </ns0:GLMS_RIDGE_VALUE>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:GLMS_VIF_FOR_RIDGE">
   <xsl:variable name="var12_current" select="."/>
   <ns0:GLMS_VIF_FOR_RIDGE>
    <xsl:value-of select="string($var12_current)"/>
   </ns0:GLMS_VIF_FOR_RIDGE>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ODMS_MISSING_VALUE_TREATMENT">
   <xsl:variable name="var14_current" select="."/>
   <ns0:ODMS_MISSING_VALUE_TREATMENT>
    <xsl:value-of select="string($var14_current)"/>
   </ns0:ODMS_MISSING_VALUE_TREATMENT>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ODMS_ROW_WEIGHT_COLUMN_NAME">
   <xsl:variable name="var16_current" select="."/>
   <ns0:ODMS_ROW_WEIGHT_COLUMN_NAME>
    <xsl:value-of select="string($var16_current)"/>
   </ns0:ODMS_ROW_WEIGHT_COLUMN_NAME>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf138_ClassificationTestSettingsType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:TopNTargets">
   <ns0:TopNTargets>
    <xsl:call-template name="tbf:tbf139_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TopNTargets>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:BottomNTargets">
   <ns0:BottomNTargets>
    <xsl:call-template name="tbf:tbf140_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:BottomNTargets>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SpecificTargets">
   <ns0:SpecificTargets>
    <xsl:call-template name="tbf:tbf141_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:SpecificTargets>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf139_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Value">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Value">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf140_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Value">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Value">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf141_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:TargetValue">
   <ns0:TargetValue>
    <xsl:call-template name="tbf:tbf142_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TargetValue>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf142_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Value">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Value">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf143_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@StartupCost">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="StartupCost">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@IncrementalRevenue">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="IncrementalRevenue">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@IncrementalCost">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="IncrementalCost">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Budget">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Budget">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Population">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Population">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf144_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:ClassificationResult">
   <ns0:ClassificationResult>
    <xsl:call-template name="tbf:tbf145_ClassificationResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ClassificationResult>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf145_ClassificationResultType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CreationDate">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="CreationDate">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@ModelId">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="ModelId">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TestMetrics">
   <ns0:TestMetrics>
    <xsl:call-template name="tbf:tbf16_ResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TestMetrics>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ConfusionMatrix">
   <ns0:ConfusionMatrix>
    <xsl:call-template name="tbf:tbf16_ResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ConfusionMatrix>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Lifts">
   <ns0:Lifts>
    <xsl:call-template name="tbf:tbf146_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Lifts>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ROCs">
   <ns0:ROCs>
    <xsl:call-template name="tbf:tbf148_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ROCs>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf146_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Lift">
   <ns0:Lift>
    <xsl:call-template name="tbf:tbf147_TargetResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Lift>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf147_TargetResultType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CreationDate">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="CreationDate">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@TargetValue">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="TargetValue">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf148_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:ROC">
   <ns0:ROC>
    <xsl:call-template name="tbf:tbf147_TargetResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ROC>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:AreaUnderCurve">
   <ns0:AreaUnderCurve>
    <xsl:call-template name="tbf:tbf149_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:AreaUnderCurve>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf149_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Area">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Area">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@TargetValue">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="TargetValue">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf150_RegressionBuildNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:BuildDataSource">
   <ns0:BuildDataSource>
    <xsl:call-template name="tbf:tbf103_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:BuildDataSource>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CaseAttributes">
   <ns0:CaseAttributes>
    <xsl:call-template name="tbf:tbf104_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CaseAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:MiningAttributes">
   <ns0:MiningAttributes>
    <xsl:call-template name="tbf:tbf105_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:MiningAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TestDataSource">
   <ns0:TestDataSource>
    <xsl:call-template name="tbf:tbf107_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TestDataSource>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TargetAttribute">
   <ns0:TargetAttribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TargetAttribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Models">
   <ns0:Models>
    <xsl:call-template name="tbf:tbf151_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Models>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Results">
   <ns0:Results>
    <xsl:call-template name="tbf:tbf156_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Results>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf151_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:RSupportVectorMachineModel">
   <ns0:RSupportVectorMachineModel>
    <xsl:call-template name="tbf:tbf152_RSupportVectorMachineModelType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:RSupportVectorMachineModel>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:RGeneralizedLinearModel">
   <ns0:RGeneralizedLinearModel>
    <xsl:call-template name="tbf:tbf154_RGeneralizedLinearModelType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:RGeneralizedLinearModel>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf152_RSupportVectorMachineModelType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Valid">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Valid">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CreationDate">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="CreationDate">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UseForOutput">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="UseForOutput">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:InputMiningData">
   <ns0:InputMiningData>
    <xsl:call-template name="tbf:tbf112_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:InputMiningData>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf113_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TargetAttribute">
   <ns0:TargetAttribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TargetAttribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:RSupportVectorMachineAlgo">
   <ns0:RSupportVectorMachineAlgo>
    <xsl:call-template name="tbf:tbf153_RSupportVectorMachineAlgoType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:RSupportVectorMachineAlgo>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf153_RSupportVectorMachineAlgoType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:SVMS_ACTIVE_LEARNING">
   <xsl:variable name="var2_current" select="."/>
   <ns0:SVMS_ACTIVE_LEARNING>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:SVMS_ACTIVE_LEARNING>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_COMPLEXITY_FACTOR">
   <xsl:variable name="var4_current" select="."/>
   <ns0:SVMS_COMPLEXITY_FACTOR>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:SVMS_COMPLEXITY_FACTOR>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_CONV_TOLERANCE">
   <xsl:variable name="var6_current" select="."/>
   <ns0:SVMS_CONV_TOLERANCE>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:SVMS_CONV_TOLERANCE>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_KERNEL_CACHE_SIZE">
   <xsl:variable name="var8_current" select="."/>
   <ns0:SVMS_KERNEL_CACHE_SIZE>
    <xsl:value-of select="string($var8_current)"/>
   </ns0:SVMS_KERNEL_CACHE_SIZE>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_KERNEL_FUNCTION">
   <xsl:variable name="var10_current" select="."/>
   <ns0:SVMS_KERNEL_FUNCTION>
    <xsl:value-of select="string($var10_current)"/>
   </ns0:SVMS_KERNEL_FUNCTION>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_STD_DEV">
   <xsl:variable name="var12_current" select="."/>
   <ns0:SVMS_STD_DEV>
    <xsl:value-of select="string($var12_current)"/>
   </ns0:SVMS_STD_DEV>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_EPSILON">
   <xsl:variable name="var14_current" select="."/>
   <ns0:SVMS_EPSILON>
    <xsl:value-of select="string($var14_current)"/>
   </ns0:SVMS_EPSILON>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf154_RGeneralizedLinearModelType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Valid">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Valid">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CreationDate">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="CreationDate">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UseForOutput">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="UseForOutput">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:InputMiningData">
   <ns0:InputMiningData>
    <xsl:call-template name="tbf:tbf112_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:InputMiningData>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf113_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TargetAttribute">
   <ns0:TargetAttribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TargetAttribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:RGeneralizedLinearModelAlgo">
   <ns0:RGeneralizedLinearModelAlgo>
    <xsl:call-template name="tbf:tbf155_RGeneralizedLinearAlgoType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:RGeneralizedLinearModelAlgo>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf155_RGeneralizedLinearAlgoType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:GLMS_CONF_LEVEL">
   <xsl:variable name="var2_current" select="."/>
   <ns0:GLMS_CONF_LEVEL>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:GLMS_CONF_LEVEL>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:GLMS_DIAGNOSTICS_TABLE_NAME">
   <xsl:variable name="var4_current" select="."/>
   <ns0:GLMS_DIAGNOSTICS_TABLE_NAME>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:GLMS_DIAGNOSTICS_TABLE_NAME>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:GLMS_REFERENCE_CLASS_NAME">
   <xsl:variable name="var6_current" select="."/>
   <ns0:GLMS_REFERENCE_CLASS_NAME>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:GLMS_REFERENCE_CLASS_NAME>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:GLMS_RIDGE_REGRESSION">
   <xsl:variable name="var8_current" select="."/>
   <ns0:GLMS_RIDGE_REGRESSION>
    <xsl:value-of select="string($var8_current)"/>
   </ns0:GLMS_RIDGE_REGRESSION>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:GLMS_RIDGE_VALUE">
   <xsl:variable name="var10_current" select="."/>
   <ns0:GLMS_RIDGE_VALUE>
    <xsl:value-of select="string($var10_current)"/>
   </ns0:GLMS_RIDGE_VALUE>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:GLMS_VIF_FOR_RIDGE">
   <xsl:variable name="var12_current" select="."/>
   <ns0:GLMS_VIF_FOR_RIDGE>
    <xsl:value-of select="string($var12_current)"/>
   </ns0:GLMS_VIF_FOR_RIDGE>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ODMS_MISSING_VALUE_TREATMENT">
   <xsl:variable name="var14_current" select="."/>
   <ns0:ODMS_MISSING_VALUE_TREATMENT>
    <xsl:value-of select="string($var14_current)"/>
   </ns0:ODMS_MISSING_VALUE_TREATMENT>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ODMS_ROW_WEIGHT_COLUMN_NAME">
   <xsl:variable name="var16_current" select="."/>
   <ns0:ODMS_ROW_WEIGHT_COLUMN_NAME>
    <xsl:value-of select="string($var16_current)"/>
   </ns0:ODMS_ROW_WEIGHT_COLUMN_NAME>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf156_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:RegressionResult">
   <ns0:RegressionResult>
    <xsl:call-template name="tbf:tbf157_RegressionResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:RegressionResult>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf157_RegressionResultType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CreationDate">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="CreationDate">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@ModelId">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="ModelId">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TestMetrics">
   <ns0:TestMetrics>
    <xsl:call-template name="tbf:tbf16_ResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TestMetrics>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ResidualPlot">
   <ns0:ResidualPlot>
    <xsl:call-template name="tbf:tbf16_ResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ResidualPlot>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf158_ClusteringBuildNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:BuildDataSource">
   <ns0:BuildDataSource>
    <xsl:call-template name="tbf:tbf103_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:BuildDataSource>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CaseAttributes">
   <ns0:CaseAttributes>
    <xsl:call-template name="tbf:tbf104_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CaseAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:MiningAttributes">
   <ns0:MiningAttributes>
    <xsl:call-template name="tbf:tbf105_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:MiningAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Models">
   <ns0:Models>
    <xsl:call-template name="tbf:tbf159_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Models>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf159_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:KMeansModel">
   <ns0:KMeansModel>
    <xsl:call-template name="tbf:tbf160_KMeansModelType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:KMeansModel>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:OClusterModel">
   <ns0:OClusterModel>
    <xsl:call-template name="tbf:tbf162_OClusterModelType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:OClusterModel>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf160_KMeansModelType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Valid">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Valid">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CreationDate">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="CreationDate">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UseForOutput">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="UseForOutput">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:InputMiningData">
   <ns0:InputMiningData>
    <xsl:call-template name="tbf:tbf112_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:InputMiningData>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf113_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:KMeansAlgo">
   <ns0:KMeansAlgo>
    <xsl:call-template name="tbf:tbf161_KMeansAlgoType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:KMeansAlgo>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf161_KMeansAlgoType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:CLUS_NUM_CLUSTERS">
   <xsl:variable name="var2_current" select="."/>
   <ns0:CLUS_NUM_CLUSTERS>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:CLUS_NUM_CLUSTERS>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:KMNS_BLOCK_GROWTH">
   <xsl:variable name="var4_current" select="."/>
   <ns0:KMNS_BLOCK_GROWTH>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:KMNS_BLOCK_GROWTH>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:KMNS_CONV_TOLERANCE">
   <xsl:variable name="var6_current" select="."/>
   <ns0:KMNS_CONV_TOLERANCE>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:KMNS_CONV_TOLERANCE>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:KMNS_DISTANCE">
   <xsl:variable name="var8_current" select="."/>
   <ns0:KMNS_DISTANCE>
    <xsl:value-of select="string($var8_current)"/>
   </ns0:KMNS_DISTANCE>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:KMNS_ITERATIONS">
   <xsl:variable name="var10_current" select="."/>
   <ns0:KMNS_ITERATIONS>
    <xsl:value-of select="string($var10_current)"/>
   </ns0:KMNS_ITERATIONS>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:KMNS_MIN_PCT_ATTR_SUPPORT">
   <xsl:variable name="var12_current" select="."/>
   <ns0:KMNS_MIN_PCT_ATTR_SUPPORT>
    <xsl:value-of select="string($var12_current)"/>
   </ns0:KMNS_MIN_PCT_ATTR_SUPPORT>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:KMNS_NUM_BINS">
   <xsl:variable name="var14_current" select="."/>
   <ns0:KMNS_NUM_BINS>
    <xsl:value-of select="string($var14_current)"/>
   </ns0:KMNS_NUM_BINS>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:KMNS_SPLIT_CRITERION">
   <xsl:variable name="var16_current" select="."/>
   <ns0:KMNS_SPLIT_CRITERION>
    <xsl:value-of select="string($var16_current)"/>
   </ns0:KMNS_SPLIT_CRITERION>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf162_OClusterModelType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Valid">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Valid">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CreationDate">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="CreationDate">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UseForOutput">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="UseForOutput">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:InputMiningData">
   <ns0:InputMiningData>
    <xsl:call-template name="tbf:tbf112_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:InputMiningData>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf113_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:OClusterAlgo">
   <ns0:OClusterAlgo>
    <xsl:call-template name="tbf:tbf163_OClusterAlgoType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:OClusterAlgo>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf163_OClusterAlgoType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:CLUS_NUM_CLUSTERS">
   <xsl:variable name="var2_current" select="."/>
   <ns0:CLUS_NUM_CLUSTERS>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:CLUS_NUM_CLUSTERS>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:OCLT_MAX_BUFFER">
   <xsl:variable name="var4_current" select="."/>
   <ns0:OCLT_MAX_BUFFER>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:OCLT_MAX_BUFFER>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:OCLT_SENSITIVITY">
   <xsl:variable name="var6_current" select="."/>
   <ns0:OCLT_SENSITIVITY>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:OCLT_SENSITIVITY>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf164_AssociationBuildNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@MaxDistinctItemValue">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="MaxDistinctItemValue">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:BuildDataSource">
   <ns0:BuildDataSource>
    <xsl:call-template name="tbf:tbf103_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:BuildDataSource>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CaseAttributes">
   <ns0:CaseAttributes>
    <xsl:call-template name="tbf:tbf104_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CaseAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:MiningAttributes">
   <ns0:MiningAttributes>
    <xsl:call-template name="tbf:tbf105_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:MiningAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ItemID">
   <ns0:ItemID>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ItemID>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ItemValue">
   <ns0:ItemValue>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ItemValue>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Models">
   <ns0:Models>
    <xsl:call-template name="tbf:tbf165_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Models>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf165_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:AprioriModel">
   <ns0:AprioriModel>
    <xsl:call-template name="tbf:tbf166_AprioriModelType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:AprioriModel>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf166_AprioriModelType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Valid">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Valid">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CreationDate">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="CreationDate">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UseForOutput">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="UseForOutput">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:InputMiningData">
   <ns0:InputMiningData>
    <xsl:call-template name="tbf:tbf112_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:InputMiningData>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf113_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:AprioriAlgo">
   <ns0:AprioriAlgo>
    <xsl:call-template name="tbf:tbf167_AprioriAlgoType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:AprioriAlgo>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf167_AprioriAlgoType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:ASSO_MAX_RULE_LENGTH">
   <xsl:variable name="var2_current" select="."/>
   <ns0:ASSO_MAX_RULE_LENGTH>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:ASSO_MAX_RULE_LENGTH>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ASSO_MIN_CONFIDENCE">
   <xsl:variable name="var4_current" select="."/>
   <ns0:ASSO_MIN_CONFIDENCE>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:ASSO_MIN_CONFIDENCE>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ASSO_MIN_SUPPORT">
   <xsl:variable name="var6_current" select="."/>
   <ns0:ASSO_MIN_SUPPORT>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:ASSO_MIN_SUPPORT>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf168_FeatureExtractionBuildNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:BuildDataSource">
   <ns0:BuildDataSource>
    <xsl:call-template name="tbf:tbf103_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:BuildDataSource>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CaseAttributes">
   <ns0:CaseAttributes>
    <xsl:call-template name="tbf:tbf104_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CaseAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:MiningAttributes">
   <ns0:MiningAttributes>
    <xsl:call-template name="tbf:tbf105_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:MiningAttributes>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf169_AnomalyDetectionBuildNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:BuildDataSource">
   <ns0:BuildDataSource>
    <xsl:call-template name="tbf:tbf103_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:BuildDataSource>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CaseAttributes">
   <ns0:CaseAttributes>
    <xsl:call-template name="tbf:tbf104_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CaseAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:MiningAttributes">
   <ns0:MiningAttributes>
    <xsl:call-template name="tbf:tbf105_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:MiningAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Models">
   <ns0:Models>
    <xsl:call-template name="tbf:tbf170_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Models>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf170_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:AnomalyDetectionModel">
   <ns0:AnomalyDetectionModel>
    <xsl:call-template name="tbf:tbf171_AnomalyDetectionModelType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:AnomalyDetectionModel>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf171_AnomalyDetectionModelType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Valid">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Valid">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CreationDate">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="CreationDate">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UseForOutput">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="UseForOutput">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:InputMiningData">
   <ns0:InputMiningData>
    <xsl:call-template name="tbf:tbf112_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:InputMiningData>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf113_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:AnomalyDetectionAlgo">
   <ns0:AnomalyDetectionAlgo>
    <xsl:call-template name="tbf:tbf172_AnomalyDetectionAlgoType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:AnomalyDetectionAlgo>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf172_AnomalyDetectionAlgoType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:SVMS_ACTIVE_LEARNING">
   <xsl:variable name="var2_current" select="."/>
   <ns0:SVMS_ACTIVE_LEARNING>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:SVMS_ACTIVE_LEARNING>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_COMPLEXITY_FACTOR">
   <xsl:variable name="var4_current" select="."/>
   <ns0:SVMS_COMPLEXITY_FACTOR>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:SVMS_COMPLEXITY_FACTOR>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_CONV_TOLERANCE">
   <xsl:variable name="var6_current" select="."/>
   <ns0:SVMS_CONV_TOLERANCE>
    <xsl:value-of select="string($var6_current)"/>
   </ns0:SVMS_CONV_TOLERANCE>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_KERNEL_CACHE_SIZE">
   <xsl:variable name="var8_current" select="."/>
   <ns0:SVMS_KERNEL_CACHE_SIZE>
    <xsl:value-of select="string($var8_current)"/>
   </ns0:SVMS_KERNEL_CACHE_SIZE>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_KERNEL_FUNCTION">
   <xsl:variable name="var10_current" select="."/>
   <ns0:SVMS_KERNEL_FUNCTION>
    <xsl:value-of select="string($var10_current)"/>
   </ns0:SVMS_KERNEL_FUNCTION>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_STD_DEV">
   <xsl:variable name="var12_current" select="."/>
   <ns0:SVMS_STD_DEV>
    <xsl:value-of select="string($var12_current)"/>
   </ns0:SVMS_STD_DEV>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SVMS_OUTLIER_RATE">
   <xsl:variable name="var14_current" select="."/>
   <ns0:SVMS_OUTLIER_RATE>
    <xsl:value-of select="string($var14_current)"/>
   </ns0:SVMS_OUTLIER_RATE>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf173_ModelNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:MiningFunction">
   <xsl:variable name="var14_current" select="."/>
   <ns0:MiningFunction>
    <xsl:value-of select="string($var14_current)"/>
   </ns0:MiningFunction>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Models">
   <ns0:Models>
    <xsl:call-template name="tbf:tbf174_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Models>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TargetAttribute">
   <ns0:TargetAttribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TargetAttribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TargetValues">
   <ns0:TargetValues>
    <xsl:call-template name="tbf:tbf178_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TargetValues>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf174_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Model">
   <ns0:Model>
    <xsl:call-template name="tbf:tbf175_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Model>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf175_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Schema">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Schema">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@MiningFunction">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="MiningFunction">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@MiningAlgorithm">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="MiningAlgorithm">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UseForOutput">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="UseForOutput">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@ModelId">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="ModelId">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ModelSettingsODM">
   <ns0:ModelSettingsODM>
    <xsl:call-template name="tbf:tbf176_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ModelSettingsODM>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf176_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:ModelSettingODM">
   <ns0:ModelSettingODM>
    <xsl:call-template name="tbf:tbf177_ModelSettingODMType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ModelSettingODM>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf177_ModelSettingODMType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Value">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Value">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Type">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Type">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf178_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:TargetValueString">
   <xsl:variable name="var2_current" select="."/>
   <ns0:TargetValueString>
    <xsl:value-of select="string($var2_current)"/>
   </ns0:TargetValueString>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TargetValueNumber">
   <xsl:variable name="var4_current" select="."/>
   <ns0:TargetValueNumber>
    <xsl:value-of select="string($var4_current)"/>
   </ns0:TargetValueNumber>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf179_ApplyNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@ColumnOutputOrder">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="ColumnOutputOrder">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var20_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var20_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SupplementalAttributes">
   <ns0:SupplementalAttributes>
    <xsl:call-template name="tbf:tbf180_SupplementalAttributesType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:SupplementalAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:OutputColumns">
   <ns0:OutputColumns>
    <xsl:call-template name="tbf:tbf181_ApplyOutputColumnsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:OutputColumns>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf180_SupplementalAttributesType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@AutoSpec">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="AutoSpec">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Attribute">
   <ns0:Attribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf181_ApplyOutputColumnsType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@AutoSpec">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="AutoSpec">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:OutputColumn">
   <ns0:OutputColumn>
    <xsl:call-template name="tbf:tbf182_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:OutputColumn>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf182_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Model">
   <ns0:Model>
    <xsl:call-template name="tbf:tbf183_RefModelType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Model>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Prediction">
   <ns0:Prediction>
    <xsl:call-template name="tbf:tbf184_PredictionType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Prediction>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:PredictionBounds">
   <ns0:PredictionBounds>
    <xsl:call-template name="tbf:tbf188_PredictionBoundsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:PredictionBounds>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:PredictionCost">
   <ns0:PredictionCost>
    <xsl:call-template name="tbf:tbf190_PredictionCostType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:PredictionCost>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:PredictionDetails">
   <ns0:PredictionDetails>
    <xsl:call-template name="tbf:tbf194_PredictionDetailsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:PredictionDetails>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:PredictionProbability">
   <ns0:PredictionProbability>
    <xsl:call-template name="tbf:tbf196_PredictionProbabilityType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:PredictionProbability>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:PredictionSet">
   <ns0:PredictionSet>
    <xsl:call-template name="tbf:tbf198_PredictionSetType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:PredictionSet>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ClusterId">
   <ns0:ClusterId>
    <xsl:call-template name="tbf:tbf202_ClusterIdType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ClusterId>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ClusterProbability">
   <ns0:ClusterProbability>
    <xsl:call-template name="tbf:tbf204_ClusterProbabilityType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ClusterProbability>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ClusterSet">
   <ns0:ClusterSet>
    <xsl:call-template name="tbf:tbf206_ClusterSetType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ClusterSet>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:FeatureId">
   <ns0:FeatureId>
    <xsl:call-template name="tbf:tbf208_FeatureIdType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:FeatureId>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:FeatureSet">
   <ns0:FeatureSet>
    <xsl:call-template name="tbf:tbf210_FeatureSetType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:FeatureSet>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:FeatureValue">
   <ns0:FeatureValue>
    <xsl:call-template name="tbf:tbf212_FeatureValueType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:FeatureValue>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf183_RefModelType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Schema">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Schema">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@MiningFunction">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="MiningFunction">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@MiningAlgorithm">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="MiningAlgorithm">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UseForOutput">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="UseForOutput">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@ModelId">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="ModelId">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@IsModelBuilt">
   <xsl:variable name="var16_current" select="."/>
   <xsl:attribute name="IsModelBuilt">
    <xsl:value-of select="string($var16_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@NodeId">
   <xsl:variable name="var18_current" select="."/>
   <xsl:attribute name="NodeId">
    <xsl:value-of select="string($var18_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf184_PredictionType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:CostOption">
   <ns0:CostOption>
    <xsl:call-template name="tbf:tbf185_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CostOption>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Column">
   <ns0:Column>
    <xsl:call-template name="tbf:tbf187_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Column>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf185_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:None">
    <ns0:None/>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Model">
   <xsl:variable name="var4_current" select="."/>
   <xsl:copy-of select="$var4_current/@*"/>
   <xsl:copy-of select="$var4_current/node()"/>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Inline">
   <ns0:Inline>
    <xsl:call-template name="tbf:tbf186_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Inline>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf186_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:CostMatrix">
   <ns0:CostMatrix>
    <xsl:call-template name="tbf:tbf120_CostMatrixType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CostMatrix>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf187_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf188_PredictionBoundsType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Column">
   <ns0:Column>
    <xsl:call-template name="tbf:tbf189_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Column>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf189_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@LowerBound">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="LowerBound">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UpperBound">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="UpperBound">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@TargetValue">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="TargetValue">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Confidence">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Confidence">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf190_PredictionCostType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:CostOption">
   <ns0:CostOption>
    <xsl:call-template name="tbf:tbf191_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CostOption>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Column">
   <ns0:Column>
    <xsl:call-template name="tbf:tbf193_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Column>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf191_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:None">
    <ns0:None/>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Model">
   <xsl:variable name="var4_current" select="."/>
   <xsl:copy-of select="$var4_current/@*"/>
   <xsl:copy-of select="$var4_current/node()"/>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Inline">
   <ns0:Inline>
    <xsl:call-template name="tbf:tbf192_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Inline>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf192_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:CostMatrix">
   <ns0:CostMatrix>
    <xsl:call-template name="tbf:tbf120_CostMatrixType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CostMatrix>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf193_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@TargetValue">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="TargetValue">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf194_PredictionDetailsType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Column">
   <ns0:Column>
    <xsl:call-template name="tbf:tbf195_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Column>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf195_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf196_PredictionProbabilityType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Column">
   <ns0:Column>
    <xsl:call-template name="tbf:tbf197_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Column>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf197_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@TargetValue">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="TargetValue">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf198_PredictionSetType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:CostOption">
   <ns0:CostOption>
    <xsl:call-template name="tbf:tbf199_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CostOption>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Column">
   <ns0:Column>
    <xsl:call-template name="tbf:tbf201_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Column>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf199_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:None">
    <ns0:None/>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Model">
   <xsl:variable name="var4_current" select="."/>
   <xsl:copy-of select="$var4_current/@*"/>
   <xsl:copy-of select="$var4_current/node()"/>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Inline">
   <ns0:Inline>
    <xsl:call-template name="tbf:tbf200_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Inline>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf200_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:CostMatrix">
   <ns0:CostMatrix>
    <xsl:call-template name="tbf:tbf120_CostMatrixType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CostMatrix>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf201_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@TopNValue">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="TopNValue">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@ProbCutOff">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="ProbCutOff">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CostCutOff">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="CostCutOff">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf202_ClusterIdType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Column">
   <ns0:Column>
    <xsl:call-template name="tbf:tbf203_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Column>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf203_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf204_ClusterProbabilityType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Column">
   <ns0:Column>
    <xsl:call-template name="tbf:tbf205_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Column>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf205_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@ClusterId">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="ClusterId">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf206_ClusterSetType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Column">
   <ns0:Column>
    <xsl:call-template name="tbf:tbf207_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Column>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf207_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@TopNValue">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="TopNValue">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CutOffValue">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="CutOffValue">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf208_FeatureIdType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Column">
   <ns0:Column>
    <xsl:call-template name="tbf:tbf209_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Column>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf209_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf210_FeatureSetType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Column">
   <ns0:Column>
    <xsl:call-template name="tbf:tbf211_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Column>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf211_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@TopNValue">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="TopNValue">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@CutOffValue">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="CutOffValue">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf212_FeatureValueType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Column">
   <ns0:Column>
    <xsl:call-template name="tbf:tbf213_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Column>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf213_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@FeatureId">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="FeatureId">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf214_TestNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TargetAttribute">
   <ns0:TargetAttribute>
    <xsl:call-template name="tbf:tbf18_AttributeType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TargetAttribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TestSettings">
   <ns0:TestSettings>
    <xsl:call-template name="tbf:tbf138_ClassificationTestSettingsType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TestSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CaseAttributes">
   <ns0:CaseAttributes>
    <xsl:call-template name="tbf:tbf104_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CaseAttributes>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:TestModels">
   <ns0:TestModels>
    <xsl:call-template name="tbf:tbf215_TestModelType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:TestModels>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Results">
   <ns0:Results>
    <xsl:call-template name="tbf:tbf217_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Results>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf215_TestModelType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@MiningFunction">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="MiningFunction">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AutoSpec">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="AutoSpec">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Archive">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Archive">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Model">
   <ns0:Model>
    <xsl:call-template name="tbf:tbf216_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Model>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf216_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Schema">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Schema">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@MiningFunction">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="MiningFunction">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@MiningAlgorithm">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="MiningAlgorithm">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@UseForOutput">
   <xsl:variable name="var12_current" select="."/>
   <xsl:attribute name="UseForOutput">
    <xsl:value-of select="string($var12_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@ModelId">
   <xsl:variable name="var14_current" select="."/>
   <xsl:attribute name="ModelId">
    <xsl:value-of select="string($var14_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@IsModelBuilt">
   <xsl:variable name="var16_current" select="."/>
   <xsl:attribute name="IsModelBuilt">
    <xsl:value-of select="string($var16_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@NodeId">
   <xsl:variable name="var18_current" select="."/>
   <xsl:attribute name="NodeId">
    <xsl:value-of select="string($var18_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@TestStatus">
   <xsl:variable name="var20_current" select="."/>
   <xsl:attribute name="TestStatus">
    <xsl:value-of select="string($var20_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf217_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:ClassificationResult">
   <ns0:ClassificationResult>
    <xsl:call-template name="tbf:tbf145_ClassificationResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ClassificationResult>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:RegressionResult">
   <ns0:RegressionResult>
    <xsl:call-template name="tbf:tbf157_RegressionResultType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:RegressionResult>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf218_CompareNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf219_MonitorNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf220_ModelDetailsDataNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ModelDetailsOutput">
   <ns0:ModelDetailsOutput>
    <xsl:call-template name="tbf:tbf221_ModelDetailsOutputType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ModelDetailsOutput>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf221_ModelDetailsOutputType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Type">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Type">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@MiningFunction">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="MiningFunction">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@MiningAlgorithm">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="MiningAlgorithm">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AutoSpec">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="AutoSpec">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Models">
   <ns0:Models>
    <xsl:call-template name="tbf:tbf222_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Models>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Attributes">
   <ns0:Attributes>
    <xsl:call-template name="tbf:tbf17_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Attributes>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf222_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Model">
   <ns0:Model>
    <xsl:call-template name="tbf:tbf183_RefModelType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Model>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf223_TestDetailsDataNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf224_FilterDetailsDataNodeType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Status">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="Status">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Annotation">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Annotation">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AttributesInDBTableCount">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="AttributesInDBTableCount">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Icon">
   <ns0:Icon>
    <xsl:call-template name="tbf:tbf4_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Icon>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Messages">
   <ns0:Messages>
    <xsl:call-template name="tbf:tbf5_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Messages>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:CacheSettings">
   <ns0:CacheSettings>
    <xsl:call-template name="tbf:tbf12_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:CacheSettings>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:SQLExpression">
   <xsl:variable name="var18_current" select="."/>
   <ns0:SQLExpression>
    <xsl:value-of select="string($var18_current)"/>
   </ns0:SQLExpression>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:FilterDetailsOutput">
   <ns0:FilterDetailsOutput>
    <xsl:call-template name="tbf:tbf225_FilterDetailsOutputType">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:FilterDetailsOutput>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf225_FilterDetailsOutputType">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Type">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Type">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@AutoSpec">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="AutoSpec">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Attributes">
   <ns0:Attributes>
    <xsl:call-template name="tbf:tbf17_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Attributes>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf226_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/ns0:Link">
   <ns0:Link>
    <xsl:call-template name="tbf:tbf227_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Link>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf227_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Id">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Id">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@From">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="From">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@To">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="To">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Name">
   <xsl:variable name="var8_current" select="."/>
   <xsl:attribute name="Name">
    <xsl:value-of select="string($var8_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@Label">
   <xsl:variable name="var10_current" select="."/>
   <xsl:attribute name="Label">
    <xsl:value-of select="string($var10_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:ConnectorGraphicsInfo">
   <ns0:ConnectorGraphicsInfo>
    <xsl:call-template name="tbf:tbf228_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:ConnectorGraphicsInfo>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf228_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@Style">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="Style">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@BorderColor">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="BorderColor">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@FillColor">
   <xsl:variable name="var6_current" select="."/>
   <xsl:attribute name="FillColor">
    <xsl:value-of select="string($var6_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/ns0:Coordinates">
   <ns0:Coordinates>
    <xsl:call-template name="tbf:tbf229_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </ns0:Coordinates>
  </xsl:for-each>
 </xsl:template>
 <xsl:template name="tbf:tbf229_">
  <xsl:param name="input" select="/.."/>
  <xsl:for-each select="$input/@XCoordinate">
   <xsl:variable name="var2_current" select="."/>
   <xsl:attribute name="XCoordinate">
    <xsl:value-of select="string($var2_current)"/>
   </xsl:attribute>
  </xsl:for-each>
  <xsl:for-each select="$input/@YCoordinate">
   <xsl:variable name="var4_current" select="."/>
   <xsl:attribute name="YCoordinate">
    <xsl:value-of select="string($var4_current)"/>
   </xsl:attribute>
  </xsl:for-each>
 </xsl:template>
 <xsl:output method="xml" encoding="UTF-8" indent="yes"/>
 <xsl:template match="/">
  <xsl:variable name="var1_instance_XMLSchema_src" select="."/>
  <WorkflowProcess xmlns="http://xmlns.oracle.com/odmr11">
   <xsl:attribute name="xsi:schemaLocation"
                  namespace="http://www.w3.org/2001/XMLSchema-instance">
    <xsl:value-of select="'http://xmlns.oracle.com/odmr11 http://xmlns.oracle.com/odmr11/odmr.xsd'"/>
   </xsl:attribute>
   <xsl:for-each select="$var1_instance_XMLSchema_src/ns0:WorkflowProcess">
    <xsl:call-template name="tbf:tbf1_">
     <xsl:with-param name="input" select="."/>
    </xsl:call-template>
   </xsl:for-each>
  </WorkflowProcess>
 </xsl:template>
</xsl:stylesheet>
